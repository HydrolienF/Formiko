# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Maven main

on:
  pull_request:
    branches: [ master ]
    types: [closed]

jobs:
  release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: Set up JDK 15
      uses: actions/setup-java@v1
      with:
        java-version: 15
    - name: Build with Maven
      run: mvn -ntp -B test
    - name: exe.sh
      run: ./exe.sh
    - name: version
      run: echo "::set-output name=version::$(cat version.md)"
      id: version
    - name: release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: Formiko${{ steps.version.outputs.version }}
        tag_name: ${{ steps.version.outputs.version }}
        body_path: CHANGELOG.md
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: upload Linux artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./out/Formiko${{ steps.version.outputs.version }}Linux.zip
        asset_name: Formiko${{ steps.version.outputs.version }}Linux.zip
        asset_content_type: application/zip
    - name: upload Windows artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./out/Formiko${{ steps.version.outputs.version }}Windows.zip
        asset_name: Formiko${{ steps.version.outputs.version }}Windows.zip
        asset_content_type: application/zip
    - name: upload Mac artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./out/Formiko${{ steps.version.outputs.version }}Mac.zip
        asset_name: Formiko${{ steps.version.outputs.version }}Mac.zip
        asset_content_type: application/zip
    - name: upload .jar artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./out/Formiko${{ steps.version.outputs.version }}.zip
        asset_name: Formiko${{ steps.version.outputs.version }}.zip
        asset_content_type: application/zip
        
  # Badge part
  badge:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
    - name: Generate version Badge file
      run: echo "{" > temp; echo "  \"schemaVersion\"'%3A' 1," >> temp; echo "  \"label\"'%3A' \"Version\"," >> temp; echo -n "  \"message\"'%3A' \"" >> temp; cat version.md | tr -d '\n' >> temp; echo "\"," >> temp;echo "  \"color\"'%3A' \"blue\"" >> temp; echo "}" >> temp
      id: badgeFile
    
    - name: Generate version Badge
      uses: popsiclestick/gist-sync-action@v1.2.0
      id: sync
      with:
        auth: ${{ secrets.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 }}
        gist_url: https://gist.githubusercontent.com/HydrolienF/c7dbc5d2d61b749ff6878e93afdaf53e/raw/version.json
        gist_title: version.json
        gist_description: ""
        github_file: "temp"

    - name: Generate JaCoCo Badge
      id: jacoco
      uses: cicirello/jacoco-badge-generator@v2.0.1

    - name: Log coverage percentage
      run: |
        echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
        echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"

    - name: Commit the badges (if it changed)
      run: |
        if [[ `git status --untracked-files=no --porcelain` != "\n" ]]; then
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .github/badges/*
          git commit -m "Autogenerated JaCoCo coverage badge"
          git push
        fi

    - name: Upload JaCoCo coverage report
      uses: actions/upload-artifact@v2
      with:
        name: jacoco-report
        path: target/site/jacoco/
